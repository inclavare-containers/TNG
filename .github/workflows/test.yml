name: Run Tests on Source Code

on:
  push:
    branches:
      - 'master'
      - 'native'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'
      - 'native'

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        # distro: [anolis8, anolis23, alinux3]
        distro: [alinux3]
        include:
          # - distro: anolis8
          #   distro_img: registry.openanolis.cn/openanolis/anolisos:8
          # - distro: anolis23
          #   distro_img: registry.openanolis.cn/openanolis/anolisos:23
          - distro: alinux3
            distro_img: "alibaba-cloud-linux-3-registry.cn-hangzhou.cr.aliyuncs.com/alinux3/alinux3:latest"

    runs-on: oracle-vm-16cpu-64gb-x86-64
    defaults:
      run:
        shell: bash
    container:
      image: ${{ matrix.distro_img }}
      options: --privileged
    steps:
      - name: Install build dependencies
        run: |
          set -e
          set -x

          # replace the mirror
          sed -i -E 's|https?://mirrors.openanolis.cn/anolis/|https://mirrors.aliyun.com/anolis/|g' /etc/yum.repos.d/*.repo
          sed -i -E 's|https?://mirrors.cloud.aliyuncs.com/|https://mirrors.aliyun.com/|g' /etc/yum.repos.d/*.repo

          if [[ "${{ matrix.distro }}" == anolis23 ]] ; then
              yum install anolis-epao-release -y
          fi

          yum install -y git make

      - uses: dtolnay/rust-toolchain@1.75.0

      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - uses: ./.github/actions/run-aa-as

      - name: Run unit tests and integration tests
        run: |
          set -e
          set -x

          # Append dns server
          echo "nameserver 8.8.8.8" >> /etc/resolv.conf
          # Run test
          make run-test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        # We only need to upload coverage report once
        if: ${{ matrix.distro == 'alinux3' }}
        with:
          files: target/codecov.json
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

